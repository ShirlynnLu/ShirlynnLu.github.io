<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建blog使用Next主题 配置以及美化方法（必看必学）]]></title>
    <url>%2F2019%2F04%2F01%2Fnext1%2F</url>
    <content type="text"><![CDATA[Next主题优化 个性化打造Hexo使用next主题的各种优化（必看） Hexo使用next主题的各种优化（必看） Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用Markdown 编写文章。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。&gt;这里说明白了就是hexo的这个框架啊，基于Node.js，hexo用来生成html（从markdown到html的旅程），比较高效。&gt;而github pages支持静态页面的解析，完全可以自己写 html push 到 gitpages&gt;更多的参考 hexo是怎么工作的http://coderunthings.com/2017/08/20/howhexoworks/( 关于如何初步使用Hexo以及Github来搭建博客请参考我博客中的其他文章或者网上自行搜索） )而NexT是hexo中经常使用到的一个主题，可能是因为它漂亮hhh其实是因为这个主题封装的插件比较好和全，大部分只要往里头写就行了。其他的主题可以在github上搜索，前三名是Next，Casper，uno～有哪些好看的 Hexo 主题？网上能搜索出很多的教程，我就不一一记录了，Next主题优点scheme（主题）、Plug-in（插件）都有。其实我们搭建自己个人的blog，更直观的就是一个主题的使用感受。网上还有很多把自己的搭建的站点配置文件和主题配置文件源码分享的。注意站点配置文件和主题配置文件在 Hexo 中有两份主要的配置文件，其名称都是_config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。拿我自己来举例子，站点配置文件的路径是/shirlynn/blog/_config.yml，主题配置文件的路径是/shirlynn/blog/themes/next/_config.ymlshirlynn/blog是我的站点根目录，当初下载hexo时必须安装在用户目录下。 不同的主题配置文件不同，比如landscape主题的主题配置文件的路径是/shirlynn/blog/themes/landscape/_config.yml不建议大家直接复制他人的源码，还是按照自己的想法来配置比较好。开始做之前先多看看，一旦开始动手的话也就是一天的时间就能得到自己的个性化的博客！ 第一步 官方手册我当初是按照官方手册Next官方手册来的，都比较简单明了。一些比较基本的，比如字体等，都已经包含在其中。当然不必要每一步都和官方一样，但是为了之后自己的定制个人化打下基础，再后来的配置中知道自己正在做什么就行了。 第二步 next主题的各种优化（必看） 可以在侧边栏快速找到你想要的个性化设置 修改文章字体的大小 博客首页文章摘要显示图片 增加站内搜索 增加底部版权声明 添加字数统计与阅读时长 添加来必力评论系统 修改头像实现旋转 添加访问量 添加进度条 侧边栏社交小图标设置 添加Rss 修改文章内链接文本样式 修改文章底部的那个带#号的标签 在每篇文章末尾统一添加“本文结束”标记 添加底部分享 修改代码块自定义样式 添加友情链接 博客添加背景动态效果和心心 hexo文章目录显示的bug 更换Scheme 优化加载速度 博文置顶 博客置顶功能 1. 修改文章字体的大小打开Next主题的配置文件_config.yml，将global属性的size设置为16。更为详细的设置可以参考：Next官方手册 12345# Global font settings used on &lt;body&gt; element.global:external: truefamily: Latosize: 16 2. 博客首页文章摘要显示图片给文章的Front-matter添加photos字段。例如： 1234567title: date: 2019-06-25 14:08:12tags: 测试categories: updated:photos: &apos;http://cn.naturewallpaperfree.com/tiankong-shui-bolang/ziran-bizhi-1280x800-4202-fa8bea7b.jpg&apos;copyright: true 添加了photos字段后，在博客首页就会显示对应的图片。每个标签的含义可以参考：Hexo官方文档 3. 增加站内搜索Hexo提供的Local Search,原理是通过hexo-generator-search插件在本地生成一个search.xml文件，搜索的时候，从这个文件中根据关键字检索出相应的链接。 安装hexo-generator-search插件 1234$ npm install hexo-generator-search --save安装hexo-generator-searchdb插件$ npm install hexo-generator-searchdb --save 启动搜索：编辑站点配置文件~/blog/_config.yml，增加以下内容到任意位置： 123456# Add search functionsearch: path: search.xml field: post format: html limit: 10000 4. 增加底部版权声明在主题目录next/layout/_macro/下添加文件my-copyright.swig 1234567891011121314151617181920212223242526272829303132&#123;% if page.copyright %&#125;&lt;div class=&quot;my_post_copyright&quot;&gt; &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class=&quot;copy-path&quot; title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot; aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;&lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard(&apos;.fa-clipboard&apos;); clipboard.on(&apos;success&apos;, $(function()&#123; $(&quot;.fa-clipboard&quot;).click(function()&#123; swal(&#123; title: &quot;&quot;, text: &apos;复制成功&apos;, html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;));&lt;/script&gt;&#123;% endif %&#125; 在目录next/source/css/_common/components/post/下添加文件my-post-copyright.styl： 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改next/layout/_macro/post.swig,在代码 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include &apos;wechat-subscriber.swig&apos; %&#125; &lt;/div&gt;&#123;% endif %&#125; 之前添加代码 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125; &lt;/div&gt; 修改next/source/css/_common/components/post/post.styl文件，在最后一行增加代码： 1@import &quot;my-post-copyright&quot; 然后保存。 如果需要为文章添加版权信息，只需要在当前博客或者模板文件的Front-matter中添加字段：copyright: true 12345678---title: tags: categories: date: 2019-05-24 15:06:10updated:copyright: true--- 5. 添加字数统计与阅读时长NexT主题默认已经集成了字数统计的功能，只需要在主题的配置文件中打开此功能即可。 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: true separated_meta: true 修改完成之后，重新启动服务，进行预览 1hexo s --drafts 访问http://localhost:4000/ 链接，如果出现字数统计和阅读时长失效的情况，一般是因为没有安装 hexo-wordcount插件，查看 Hexo 插件： 1hexo --debug 安装字数统计的插件如果没有安装 hexo-wordcount 插件，先安装该插件： 1npm i --save hexo-wordcount Node 版本 7.6.0 之前,请安装 2.x 版本 (Node.js v7.6.0 and previous) ，安装命令如下： 1npm install hexo-wordcount@2 --save 安装完成后，重新执行启动服务预览就可以了。 6. 添加来必力评论系统首先要注册来必力帐号，并获取用户的UID（具体可以看上方的参考博客）。然后打开主题目录的配置文件/next/_config.yml，定位到livere_uid字段，将UID填入即可 1234# Support for LiveRe comments system.# You can get your uid from https://livere.com/insight/myCode (General web site)#livere_uid: your uidlivere_uid: MTAyMC8zMjk1NS85NTs3 至此，其他人就可以使用评论系统进行评论。 修改头像实现旋转更换头像，打开站点配置文件,找到avatar字段，可以使用网络路径，也可以将头像存放在source/images/中。如果头像是椭圆的，是因为图片不是一个正方形的图片，找到一个宽高像素一样的的图片即可。 1avatar: /images/head.jpg 打开\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，在里面添加如下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 8. 添加访问量打开\themes\next\layout\_partials\footer.swig文件,搜索&lt;div class=&quot;copyright&quot;&gt;，在这个div标签前边加上如下代码 1&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 然后再在合适的位置添加如下代码，自己是放在footer.swig文件的末尾，具体显示的位置见博主的博客。 12345&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 注意：统计访问量有两种不同的方式（自己使用的是uv的方式） pv的方式，也就是单个用户连续点击n篇文章，记录n次访问量 123&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; uv的方式，单个用户点击n篇文章，只记录1次访问量 123&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; 添加之后再执行hexo d -g，然后再刷新页面就能看到效果 ==2019.3.31 修复不蒜子域名失效==在对博客响应速度进行优化的时候发现busuanzi.pure.mini.js这个文件报404错误，后来查阅资料得知不蒜子的域名发生了变化。参考博客解决不蒜子无法使用问题将busuanzi-counter.swig中的域名dn-lbstatics.qbox.me修改为busuanzi.ibruce.info即可。 修改的两个文件为：busuanzi-counter.swig (路径: themes/next/layout/_third-party/analytics/busuanzi-counter.swig和themes/next_6.2/layout/_third-party/analytics/busuanzi-counter.swig,因为自己升级主题到了6.2,所以需要修改两处)footer.swig（路径：themes/next/layout/_partials/footer.swig） 9. 添加进度条首先需要查看当前NexT的版本号？如何查看当前NexT主题的版本号呢，打开主题配置文件_config.yml,最下方就显示了当前的版本号。 版本5.1.3只需要在主题配置文件中找到pace属性，将其修改为true就可以了。 12345678910111213141516171819# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal 10. 侧边栏社交小图标设置打开主题配置文件，搜索social_icons,在图标库fontawesome找自己喜欢的小图标，并将名字复制到social_icons属性下，保存即可 1234567891011121314151617social: GitHub: https://github.com/bailangsyc CSDN: http://blog.csdn.net/bailangsyc?ref=toolbar 简书: https://www.jianshu.com/u/05c8535250b5 音乐: http://music.163.com/#/user/home?id=328756156 #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || googlesocial_icons: enable: true icons_only: false transition: false GitHub: github csdn: crosshairs 简书: heartbeat 音乐: fa-music 11. 添加Rss使用cd进入博客的根目录，执行下方命令安装插件hexo-generate-feed 1$ npm install --save hexo-generator-feed 找到博客的配置文件_config.yml,然后在文件末尾添加 123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed 然后找到主题的配置文件_config.yml,在rss:的后面加上/atom.xml,注意在冒号后面要加一个空格) 1234# Set rss to false to disable feed link.# Leave rss as empty to use site&apos;s feed link.# Set rss to specific value if you have burned your feed already.rss: /atom.xml 在博客根目录执行命令hexo g 12. 修改文章内链接文本样式见本博客文章中的效果：当点击蓝色链接时，颜色变为黄色 修改文件 themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式 1234567891011121314// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125;@import &quot;post-expand&quot;;@import &quot;post-collapse&quot;; 13. 修改文章底部的那个带#号的标签默认的标签文字前边是个#，可以将其修改 修改模板/themes/next/layout/_macro/post.swig，搜索rel=”tag”&gt;#，将 # 换成 12345&lt;div class=&quot;post-tags&quot;&gt; &#123;% for tag in post.tags %&#125; &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; 14. 在每篇文章末尾统一添加“本文结束”标记在路径\themes\next\layout\_macro 中新建passage-end-tag.swig 文件,并添加以下内容 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\themes\next\layout\_macro\post.swig文件，在post-body之后， post-footer 之前添加代码 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 然后打开主题配置文件_config.yml,在末尾添加 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 15. 添加底部分享在主题的配置文件中,将jiathis改为true即可 123456# Share# This plugin is more useful in China, make sure you known how to use it.# And you can find the use guide at official webiste: http://www.jiathis.com/.# Warning: JiaThis does not support https.jiathis: true ##uid: Get this uid from http://www.jiathis.com/ 16. 修改代码块自定义样式打开\themes\next\source\css\_custom\custom.styl,向里面加入如下css样式，即可实现 12345code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125; 17. 添加友情链接在主题配置文件(blog\themes\next_config.yml)中打开links 开关即可 12345678# Blog rollslinks_icon: linklinks_title: 友情链接#links_layout: blocklinks_layout: inlinelinks: #Title: http://example.com/ JayLee: http://xxxx.cn/ 注意：添加友情链接后 运行hexo g命令报错。此时，只要将其中一个links_layout属性注掉就可以。 links_layout: inline 对应的水平布局，否则友情链接是竖直一列排列 18. 博客添加背景动态效果和心心因为动态背景效果在手机上体验不太好，所以自己只加了小心心的效果。当鼠标左键点击的时候会出现不同颜色的小心心。 下载js文件love.js 1http://7u2ss1.com1.z0.glb.clouddn.com/love.js 把 js 文件 love.js放在\themes\next\source\js\src文件目录下 更新\themes\next\layout_layout.swig文件，在末尾（在前面引用会出现找不到的bug）添加以下js引入代码： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 19. hexo文章目录显示的bug参考博客：hexo-next为啥文章预览那里我的文章跳转只能点击前面的数字 #2035 将主题配置文件中的number属性修改为false即可取消自动编号。 12# Automatically add list number to toc.number: false bug描述： hexo会自动为文章生成一个目录，并且会自动编号。这个功能可以在主题配置文件中开启，但是编号以后只点击编号才能跳转到对应位置，点击文字却没有反应。 这是hexo 3.4.3的一个bug，只有点击文章目录的编号才能跳转。更新hexo到3.4.4即可解决此bug。 进入到博客的根目录中，执行命令： 1npm update hexo 然后执行hexo version查看hexo的版本号，更新完成即可解决此bug。 20. 更换SchemeNexT主题默认有四种主题外观，Scheme的切换可以通过更改 主题配置文件 。搜索 scheme 关键字,就会看到有四行 scheme 的配置，将需要启用的scheme前面的注释#去除即可。 注意事项但是 scheme 前边一定不要留空格，:必须是英文的，而且后边必须留空格。错误的配置（:后没有空格）错误配置（scheme前边留了空格） 如果scheme前边留了空格，执行hexo g命令，或者启动博客服务时，会报出如下错误 12345678910111213141516171819Unhandled rejection Error: ENOENT: no such file or directory, open &apos;C:\github\blog\themes\next\layout\_scripts\schemes\.swig&apos; at Error (native) at Object.fs.openSync (fs.js:584:18) at Object.fs.readFileSync (fs.js:431:33) at Object.ret.load (C:\github\blog\node_modules\swig\lib\loaders\filesystem.js:55:15) at compileFile (C:\github\blog\node_modules\swig\lib\swig.js:695:31) at Object.eval [as tpl] (eval at &lt;anonymous&gt; (C:\github\blog\node_modules\swig\lib\swig.js:498:13), &lt;anonymous&gt;:293:18) at compiled [as _compiledSync] (C:\github\blog\node_modules\swig\lib\swig.js:619:18) at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:16:23) at null._compiled (C:\github\blog\node_modules\bluebird\js\release\method.js:15:34) at View.render (C:\github\blog\node_modules\hexo\lib\theme\view.js:29:15) at C:\github\blog\node_modules\hexo\lib\hexo\index.js:387:25 at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:16:23) at C:\github\blog\node_modules\bluebird\js\release\method.js:15:34 at RouteStream._read (C:\github\blog\node_modules\hexo\lib\hexo\router.js:134:3) at RouteStream.Readable.read (_stream_readable.js:336:10) at resume_ (_stream_readable.js:726:12) at _combinedTickCallback (node.js:383:13) at process._tickCallback (node.js:407:11) 21. 优化加载速度为了提高网站的加载速度，使用gulp对博文中的js、css、img等文件进行压缩。在博客的根目录执行以下命令 12$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 然后在根目录中新建文件gulpfile.js，并填入以下内容 123456789101112131415161718192021222324252627282930313233var gulp = require(&apos;gulp&apos;);var minifycss = require(&apos;gulp-minify-css&apos;);var uglify = require(&apos;gulp-uglify&apos;);var htmlmin = require(&apos;gulp-htmlmin&apos;);var htmlclean = require(&apos;gulp-htmlclean&apos;);// 压缩 public 目录 cssgulp.task(&apos;minify-css&apos;, function() &#123; return gulp.src(&apos;./public/**/*.css&apos;) .pipe(minifycss()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 压缩 public 目录 htmlgulp.task(&apos;minify-html&apos;, function() &#123; return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest(&apos;./public&apos;))&#125;);// 压缩 public/js 目录 jsgulp.task(&apos;minify-js&apos;, function() &#123; return gulp.src(&apos;./public/**/*.js&apos;) .pipe(uglify()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 执行 gulp 命令时执行的任务gulp.task(&apos;default&apos;, [ &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;]) 生成博文是执行hexo g &amp;&amp; gulp就会根据gulpfile.js中的配置，对public目录中的静态资源文件进行压缩。 22. 博文置顶打开博客的根目录，将文件node_modules/hexo-generator-index/lib/generator.js中的代码替换为: 12345678910111213141516171819202122232425262728&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, &#123; perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: &#123; __index: true &#125; &#125;);&#125;; 然后写文章的时候，添加 top字段即可，数值越大文章越靠前。例如 12345678title: tags: categories: photos:date: 2019-06-30 17:27:39updated:copyright: truetop: 100 注意：必须重启本地服务才会生效。 23. 博客置顶功能参考博客新增Hexo博客文章置顶功能 修改node_modules/hexo-generator-index/lib/generator.js的源码， 添加如下代码 12345678910111213posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); 修改后的代码如下 1234567891011121314151617181920module.exports = function(locals) &#123; var config = this.config; var posts = locals.posts.sort(config.index_generator.order_by); posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); var paginationDir = config.pagination_dir || &apos;page&apos;; var path = config.index_generator.path || &apos;&apos;; 相关链接：Next官方手册CSS颜色代码大全视图参照表！ fontawesome图标大全西蒙的博客ShaoYanCe的博客]]></content>
      <categories>
        <category>简易教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Homebrew —— 轻松安装和卸载Mac的包管理器]]></title>
    <url>%2F2019%2F02%2F21%2Fhomebrew_help%2F</url>
    <content type="text"><![CDATA[Homebrew —— 轻松安装和卸载Mac的应用 想必很多人都听说过Homebrew 如果需要很频繁的安装、配制、卸载和升级软件包，那么有一个很顺手的兵器–包管理器可以省去很多麻烦，节约各种时间和精力的成本～～OvO 而Mac上比较多的同学都是使用的Homebrew～ 这篇文章来介绍一下Homebrew 以及它的基本用法～ 什么是Homebrew？我们为什么需要它 Homebrew简称brew是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件， 使用命令，非常方便。 安装网上有很多的教程，由于版本更迭，我只说我现在版本的方式尽量还是学好brew官方手册比较好！但是由于brew本身的包管理超级强的性质，老版本几乎都是向下兼容的，很棒，update很容易！在Mac中打开Termal: 输入命令：12ruby -e &quot;$(curl --insecure -fsSLhttps://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 基本使用拿git为例 Ps 要学习git 很推荐 廖雪峰的学习教程安装就一步： 12brew install gitbrew uninstall git 1brew search [包名] //查询可用包 Homebrew 常用命令一览没事你就man brew一下可以涨不少知识。 12345$ brew --help #简洁命令帮助$brew -v #查看版本$ man brew #完整命令帮助$ brew search git #搜索软件包$ brew list #显示已经安装的所有软件包 软件更新 12345$ brew update # 同步远程最新更新情况，对本机已经安装并有更新的软件用*标明$ brew outdated #查看已安装的哪些软件包需要更新$ brew upgrade git #更新单个软件包$ brew info git #查看软件包信息$ brew home git #访问软件包官方站 软件旧版本 123$ brew cleanup #清理所有已安装软件包的历史老版本$ brew cleanup git #清理单个已安装软件包的历史版本brew cleanup -n # 查看可清理的旧版本包，不执行实际操作 上述这几条都是非常实用的，几乎隔几个月自检一下都有帮助。 由于包的版本更新的问题导致的一系列的问题都可以规避掉了！如果你想控制某个包保持版本的话，使用 1234$ brew pin $FORMULA //锁定某个包$ brew unpin $FORMULA //取消锁定 常用软件包123456brew install wgetbrew install curlbrew install opensslbrew install fish #安装fish shellbrew install git-flow #安装git-flowbrew install python #安装python Homebrew-CaskHomebrew-Cask 是 Homebrew 的一个扩展。它能够优雅、简单、快速的安装和管理 macOS 图形界面程序，比如Google Chrome 和Dropbox等等。官网 https://caskroom.github.io/。 Cask 必装的理由有图形界面的软件可以直接在 App Stroe 中下载更新，为啥还需要 Cask 呢？因为有的很好用的免费 Mac 软件并没有选择在 App Store 上架，对于没有上架的软件我们只能是通过搜索找到官网然后在下载安装包，这样不够优雅也不方便管理，而使用 Cask 可以通过一行命令就搞定安装了，还可以统一更新升级所有的软件，实现从非 App Store 途径安装的软件的统一管理。Cask 从软件官方网站下载软件包，然后在后台安装并将 .app 移动到 Applications。通过 Cask 安装的软件也会在 Lanuchpad 显示，跟从 App Store 安装的软件没啥区别。对于那些收费的软件，用 Cask 安装只是比普通安装方法节省了时间和步骤，没啥其他的区别。 Cask常用命令1234567brew cask -help 查看帮助brew cask install &lt;software name&gt; 安装软件brew cask install google-chrome #安装Chromebrew cask uninstall &lt;software name&gt; 卸载软件brew cask search &lt;software name&gt; 搜索软件brew cask info &lt;software name&gt; 查看软件相关信息brew cask list 列出通过 Homebrew-Cask 安装的包 卸载Homebrew1234567cd `brew --prefix`rm -rf Cellarbrew prunerm `git ls-files`rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributionsrm -rf .gitrm -rf ~/Library/Caches/Homebrew 小结电脑里的第三方应用越多，HomeBrew 的优势越明显。 如果只下载一个应用，可能径自前往其官网也不会觉得麻烦，但如果你每次下载第三方应用就要前往官网、每次更新都得去其菜单栏中寻找 update 按钮，那显然是不便的。HomeBrew 就为这些的零碎的操作提供了一个集中的管理办法。 学会了本文的几条命令，对你来说 HomeBrew 就不再是晦涩的命令行工具，而是一个简单好用的第三方应用版 App Store。 非常方便！ 参考少数派上的专题Homebrew，Mac 应用管家Mac 开发配置手册]]></content>
      <categories>
        <category>简易教程</category>
      </categories>
      <tags>
        <tag>terminal</tag>
        <tag>brew</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac Terminal 终端命令入门 小白 新手教程 终端切换root用户]]></title>
    <url>%2F2019%2F01%2F21%2FTerminalCommands%2F</url>
    <content type="text"><![CDATA[Terminal 终端命令入门 本来是想要在自己的研究生涯阶段好好当个人的，没想到永远计划赶不上变化，如今面临各方面的压力大了，反而自己能够安静下来做起自己。 其他的不管了，我自己还是先从一些基本的东西记录写写，慢慢上手，（总不能自己也一下子吃成一个胖子，不是吗？qwq） 第一步、 打开终端终端是系统中一个应用程序，我比较喜欢使用聚焦搜索,也就是command+space，输入「终端」或「Terminal」，看到termimal.app被选中了按下回车即可。 第二步、了解常用命令终端的操作熟练之后，遇到最多的常常离不开对文件，文件夹的操作。这个时候就要了解什么是路径 系统中的每一个文件都有一个存放位置，这一存放位置就称作路径。 终端启动后，它的默认路径在当前用户文件夹的根目录上/Users/用户名，为了确定这一点，你可以输入 pwd 命令来查看当前路径。如下所示，我的当前路径就是/Users/shirlynn 12ShirlynndeMacBook-Pro:~ shirlynn$ pwd/Users/shirlynn 快速导入路径的方法呢？直接将待编辑文件或文件夹拖入终端中即可，它会显示绝对路径。Mac 在Finder 窗口 使用shift+command+G也可以快速确定路径。 另一个是相对路径允许你告诉终端从现在开始，接下来应该怎么走。相对路径的方法实在绝对路径前加一个 .。比如我的博客根目录的绝对路径是/shirlynn/blog,由于我已经处在了/shirlynn下，我现在可以通过两种方式都可以进入。cd ./blog 或者 cd blog 这些都是无害指令，面对有风险的指令，需要在前面加输 sudo，这就是所谓的超级管理员指令，它会在你密码确认后，赋予 sudo 之后的命令最高权限，可以进行你想要的操作。 第三、终端切换root用户终端切换root用户，方法一： 使用sudo -i 123ShirlynndeMacBook-Pro:~ shirlynn$ sudo -iPassword:ShirlynndeMacBook-Pro:~ root# （注意用户名改为了root，进入了root权限） 方法二：使用sudo su接着用户名显示sh-3.2#,这里的#代表的含义就是具有root权限这时，再输入su - 1234ShirlynndeMacBook-Pro:~ shirlynn$ sudo suPassword: 输入你的密码sh-3.2# su -ShirlynndeMacBook-Pro:~ root# root权限切换回用户：su - 用户名 12sh-3.2# su - shirlynn (注意-后有空格)ShirlynndeMacBook-Pro:~ shirlynn$ 一些常用的终端命令 命令名 功能描述 使用举例 mkdir 创建一个目录 mkdir dirname rmdir 删除一个目录 rmdir dirname mvdir 移动或重命名一个目录 mvdir dir1 dir2 cd 改变当前目录 cd dirname pwd 显示当前目录的路径名 pwd ls 显示当前目录，-la隐藏项目显示,-r 全部文件并展开一级子文件夹，-R所有子文件夹 ls -la ls -R dircmp 比较两个目录的内容 dircmp dir1 dir2 cat 显示或连接文件 cat filename pg 分页格式化显示文件内容 pg filename more 分屏显示文件内容 more filename od 显示非文本文件的内容 od -c filename cp 复制文件或目录 cp file1 file2 rm 删除文件或目录 rm filename mv 改变文件名或所在目录 mv file1 file2 ln 联接文件 ln -s file1 file2 find 使用匹配表达式查找文件 find . -name “*.c” -print file 显示文件类型 file filename open 使用默认的程序打开文件 open filename 命令名 功能描述 使用举例 passwd 修改用户密码 passwd chmod 改变文件或目录的权限 chmod ug+x filename umask 定义创建文件的权限掩码 umask 027 chown 改变文件或目录的属主 chown newowner filename chgrp 改变文件或目录的所属组 chgrp staff filename xlock 给终端上锁 xlock -remote See more on Mac 终端命令大全 常见玩法 关闭崩溃报错：有时软件崩溃就已经很让人烦心了，重新打开后一遍遍弹出的问题报告更是烦不胜烦。这时你可以使用 defaults write com.apple.CrashReporter DialogType none 命令关闭这个问题报告。若你希望恢复其显示，可以输入defaults write com.apple.CrashReporter DialogType crashreport。 修改文件日期： 有时你可能需要修改文件创建或修改日期，这时可以使用 touch -t 199505090000 拖入文件命令。这句命令中的数字表示 1995 年 5 月 9 日 00:00 分，你可以根据实际需要修改。 不要进入休眠状态：当你临时不希望电脑进入休眠状态时，可以使用 caffeinate 命令让电脑时刻清醒。当你需要其恢复正常时，按下 ⌃Control - C 即可停止该命令。 程序假死需要强退：有时候程序假死了，强行退出也没用，这时可以使用 killall 命令。以微信为例，若想强退它，只需输入 killall WeChat 即可。 截图保存为 JPEG：Mac 的默认截图格式为 PNG，若你想让默认的截图保存类型为 JPEG，可以输入如下指令 defaults write com.apple.screencapture type jpg如果你希望撤销这条指令，输入 defaults write com.apple.screencapture type png 即可。 关闭截图自动阴影： 若你使用 Mac 自带的截图，会发现每次的窗口截图均会自动添加阴影，当你需要后期处理这些图片时，这些阴影可能会对你造成困扰。你可以使用下面这串命令来关闭截图阴影：defaults write com.apple.screencapture disable-shadow -bool true; killall SystemUIServer当你希望重新启动阴影时，可以输入：defaults write com.apple.screencapture disable-shadow -bool false; killall SystemUIServer 显示隐藏文件夹：在你跟着网络上的教程进行一些操作时，难免会遇到让你寻找隐藏文件夹的情况，这时你可以使用：defaults write com.apple.finder AppleShowAllFiles -bool true; killall Finder来显示所有隐藏文件夹，当你不需要再显示时，输入：defaults write com.apple.finder AppleShowAllFiles -bool false; killall Finder即可恢复隐藏。 文件格式转换 textutiltextutil 是一个系统自带的，用于处理文稿的命令，其中我最常用的功能是其下属功能 convert，这句指令允许你将任何文件，在以下文件格式中互相转换 txt, html, rtf, rtfd, doc, docx, wordml, odt, webarchive。 若你手头有一篇 DOCX 文件需要被转换成 TXT，则可以输入 textutil -convert txt 文件路径，这句代码中的 txt 处，可以替换为任何你需要转换到的文件格式，文件路径则可以采用拖拽文件到终端的方法自动填充。 少数派玩转Terminal 自动安装 brewMac 有个很方便的包管理器，名叫 Homebrew，它允许你自动安装许多应用程序。Homebrew 不是 terminal 的自带内容，需要运行这串命令来进行安装：1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 文件删除 rm这一指令本是 ==删除文件== 用的，但正因为它可以不分敌我的删除任何文件，新手误用有极大风险，因此我不打算详细介绍这个。网上有一个臭名远扬的传言，欺骗别人用 sudo rm -rfv /Cool来删除系统文件，从而使整个系统崩溃，这条命令绝对不要尝试。]]></content>
      <categories>
        <category>简易教程</category>
      </categories>
      <tags>
        <tag>terminal</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2F2018%2F12%2F02%2FjQ%2F</url>
    <content type="text"></content>
      <categories>
        <category>something</category>
      </categories>
      <tags>
        <tag>tag1</tag>
        <tag>tag2</tag>
        <tag>tag3</tag>
      </tags>
  </entry>
</search>
