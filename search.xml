<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/08/01/null/"/>
      <url>/2019/08/01/null/</url>
      
        <content type="html"><![CDATA[<p><a href="https://morvanzhou.github.io/tutorials/machine-learning/tensorflow/1-1-A-ANN-and-NN/" target="_blank" rel="noopener">莫烦的博客</a></p><p><a href="https://www.jianshu.com/p/e112012a4b2d" target="_blank" rel="noopener">不会停的蜗牛</a></p><h4 id="Gradient-Descent-in-Neural-Nets"><a href="#Gradient-Descent-in-Neural-Nets" class="headerlink" title="Gradient Descent in Neural Nets"></a>Gradient Descent in Neural Nets</h4><p>Optimization的方法</p><ul><li>Newton’s method </li><li>Least Squares method</li><li>Gradient Descent</li><li>……</li></ul><p><img src alt="Gradient Descent"></p><p><strong>误差方程：cost function</strong></p><p>在预测数值的问题中, 我们常用平方差 (Mean Squared Error) 来代替. 我们简化一下这个方程, $w$是我们神经网络中的参数, $x$,$ y$ 都是我们的数据,</p><ul><li>不断地寻找梯度下降的方向</li></ul><p>一般的简单问题中 predict value $w$ 是一维 二维cost funtion的最优解比较好找（即梯度为零）</p><p>神经网络中，predict vector   <strong>$w$</strong> =$$<br>\begin{pmatrix}<br>w_{00}&amp;\cdots &amp; w_{0j} \<br>\vdots &amp; \ddots &amp; \vdots \<br>w_{i0} &amp; \cdots &amp; w_{ij}<br>\end{pmatrix} $$</p><p>不同的初始点会有不同的效果</p><p><img src alt="cost function"></p><ul><li><p>局部最优解</p></li><li><p>全局最优解</p><p>在这个图像当中, W 的全局最优解(Global minima)在这个位置, 而其它的 解都是局部最优(Local minima). 全局最优固然是最好, 但是很多时候, 你手中的都是一个局部最优解. 神经网络的出的局部最优解一般也有很好的性能（global opt 太难）</p></li></ul><h4 id="黑盒-（构造-与-训练）"><a href="#黑盒-（构造-与-训练）" class="headerlink" title="黑盒 （构造 与 训练）"></a>黑盒 （构造 与 训练）</h4><p>黑盒子：代表特征的一次次转化（计算机识别）</p><p>迁移学习： 不同的神经网络的迁移（合并）</p><p>  当已经有一个现有的神经网络，（它已经有完全训练好学习一个代表特征的转化能力），此时输出层替换掉，可以继续学习更好的代表特征能力。</p><h4 id="Tensorflow-神经网络"><a href="#Tensorflow-神经网络" class="headerlink" title="Tensorflow 神经网络"></a>Tensorflow 神经网络</h4><blockquote><p>Google开发的python外部的结构包,是谷歌开发的深度学习系统，用它可以很快速地入门神经网络。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH简明教程入门</title>
      <link href="/2019/07/01/index/"/>
      <url>/2019/07/01/index/</url>
      
        <content type="html"><![CDATA[<p>## </p><!--<font color=#0099ff size=12 face="黑体">黑体</font>-->]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建blog使用Next主题 配置以及美化方法（必看必学）</title>
      <link href="/2019/04/01/Hexo%E6%90%AD%E5%BB%BAblog%E4%BD%BF%E7%94%A8Next%E4%B8%BB%E9%A2%98%20%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E7%BE%8E%E5%8C%96%E6%96%B9%E6%B3%95%EF%BC%88%E5%BF%85%E7%9C%8B%E5%BF%85%E5%AD%A6%EF%BC%89/"/>
      <url>/2019/04/01/Hexo%E6%90%AD%E5%BB%BAblog%E4%BD%BF%E7%94%A8Next%E4%B8%BB%E9%A2%98%20%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E7%BE%8E%E5%8C%96%E6%96%B9%E6%B3%95%EF%BC%88%E5%BF%85%E7%9C%8B%E5%BF%85%E5%AD%A6%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Next主题优化-个性化打造"><a href="#Next主题优化-个性化打造" class="headerlink" title="Next主题优化 个性化打造"></a>Next主题优化 个性化打造</h2><font color="#CCFF99" size="3">Hexo使用next主题的各种优化（必看） </font><br><font color="#66FF66" size="3">Hexo使用next主题的各种优化（必看） </font><br><strong>Hexo</strong> 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用<code>Markdown</code> 编写文章。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。<br><br>&gt;这里说明白了就是hexo的这个框架啊，基于Node.js，hexo用来生成html（从markdown到html的旅程<br>），比较高效。<br>&gt;而github pages支持静态页面的解析，完全可以自己写 html push 到 gitpages<br>&gt;更多的参考 <strong>hexo是怎么工作的</strong><a href="http://coderunthings.com/2017/08/20/howhexoworks/" target="_blank" rel="noopener">http://coderunthings.com/2017/08/20/howhexoworks/</a><br><br><br>( <font color="#FF77FF" size="3">关于如何初步使用Hexo以及Github来搭建博客请参考我博客中的其他文章或者网上自行搜索） </font>)<br><br>而<code>NexT</code>是hexo中经常使用到的一个主题，可能是因为它漂亮hhh其实是因为这个主题封装的插件比较好和全，大部分只要往里头写就行了。其他的主题可以在github上搜索，前三名是<strong>Next，Casper，uno</strong>～<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的 Hexo 主题？</a><br><br>网上能搜索出很多的教程，我就不一一记录了，Next主题优点scheme（主题）、Plug-in（插件）都有。<br>其实我们搭建自己个人的blog，更直观的就是一个主题的使用感受。网上还有很多把自己的搭建的<code>站点配置文件</code>和<br><code>主题配置文件</code><strong>源码分享</strong>的。<br><br><font color="#FF0000" size="5">注意<code>站点配置文件</code>和<code>主题配置文件</code></font><br>在 Hexo 中有两份主要的配置文件，其名称都是<code>_config.yml</code>。 其中，一份位于<strong>站点根目录</strong>下，主要包含 Hexo 本身的配置；另一份位于<strong>主题目录</strong>下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>拿我自己来举例子，<br><code>站点配置文件</code>的路径是<code>/shirlynn/blog/_config.yml</code>，<br><code>主题配置文件</code>的路径是<code>/shirlynn/blog/themes/next/_config.yml</code><br><br><code>shirlynn/blog</code>是我的站点根目录，当初下载hexo时必须安装在用户目录下。 不同的主题配置文件不同，比如<strong>landscape主题</strong>的<code>主题配置文件</code>的路径是<code>/shirlynn/blog/themes/landscape/_config.yml</code><br><br><font color="##FF8888" size="3">不建议大家直接复制他人的源码，还是按照自己的想法来配置比较好。开始做之前先多看看，一旦开始动手的话也就是一天的时间就能得到自己的个性化的博客！ </font><h2 id="第一步-官方手册"><a href="#第一步-官方手册" class="headerlink" title="第一步 官方手册"></a>第一步 官方手册</h2><p>我当初是按照官方手册<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">Next官方手册</a>来的，都比较简单明了。<br>一些比较基本的，比如字体等，都已经包含在其中。<br>当然不必要每一步都和官方一样，但是为了之后自己的定制个人化打下基础，再后来的配置中知道自己正在做什么就行了。</p><h2 id="第二步-next主题的各种优化（必看）"><a href="#第二步-next主题的各种优化（必看）" class="headerlink" title="第二步 next主题的各种优化（必看） "></a>第二步 <font color="#FFB3FF" size="5">next主题的各种优化（必看） </font></h2> <font color="#FF77FF">可以在侧边栏快速找到你想要的个性化设置 </font><ol><li>修改文章字体的大小</li><li>博客首页文章摘要显示图片</li><li>增加站内搜索</li><li>增加底部版权声明</li><li>添加字数统计与阅读时长</li><li>添加来必力评论系统</li><li>修改头像实现旋转</li><li>添加访问量</li><li>添加进度条</li><li>侧边栏社交小图标设置</li><li>添加Rss</li><li>修改文章内链接文本样式</li><li>修改文章底部的那个带#号的标签</li><li>在每篇文章末尾统一添加“本文结束”标记</li><li>添加底部分享</li><li>修改代码块自定义样式</li><li>添加友情链接</li><li>博客添加背景动态效果和心心</li><li>hexo文章目录显示的bug</li><li>更换Scheme</li><li>优化加载速度</li><li>博文置顶</li><li>博客置顶功能</li></ol><h3 id="1-修改文章字体的大小"><a href="#1-修改文章字体的大小" class="headerlink" title="1. 修改文章字体的大小"></a>1. 修改文章字体的大小</h3><p>打开Next主题的配置文件_config.yml，将global属性的size设置为16。更为详细的设置可以参考：<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">Next官方手册</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Global font settings used on &lt;body&gt; element.</span><br><span class="line">global:</span><br><span class="line">external: true</span><br><span class="line">family: Lato</span><br><span class="line">size: 16</span><br></pre></td></tr></table></figure><h3 id="2-博客首页文章摘要显示图片"><a href="#2-博客首页文章摘要显示图片" class="headerlink" title="2. 博客首页文章摘要显示图片"></a>2. 博客首页文章摘要显示图片</h3><p>给文章的Front-matter添加photos字段。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title:  </span><br><span class="line">date: 2019-06-25 14:08:12</span><br><span class="line">tags: 测试</span><br><span class="line">categories: </span><br><span class="line">updated:</span><br><span class="line">photos: &apos;http://cn.naturewallpaperfree.com/tiankong-shui-bolang/ziran-bizhi-1280x800-4202-fa8bea7b.jpg&apos;</span><br><span class="line">copyright: true</span><br></pre></td></tr></table></figure><p>添加了photos字段后，在博客首页就会显示对应的图片。每个标签的含义可以参考：Hexo官方文档</p><h3 id="3-增加站内搜索"><a href="#3-增加站内搜索" class="headerlink" title="3. 增加站内搜索"></a>3. 增加站内搜索</h3><p>Hexo提供的Local Search,原理是通过<code>hexo-generator-search插件</code>在本地生成一个<code>search.xml</code>文件，搜索的时候，从这个文件中根据关键字检索出相应的链接。</p><p><strong>安装hexo-generator-search插件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line">安装hexo-generator-searchdb插件</span><br><span class="line"></span><br><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>启动搜索：编辑<code>站点配置文件</code>~/blog/_config.yml，增加以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Add search function</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h3 id="4-增加底部版权声明"><a href="#4-增加底部版权声明" class="headerlink" title="4. 增加底部版权声明"></a>4. 增加底部版权声明</h3><p>在主题目录<code>next/layout/_macro/</code>下添加文件<code>my-copyright.swig</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    clipboard.on(&apos;success&apos;, $(function()&#123;</span><br><span class="line">      $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">        swal(&#123;</span><br><span class="line">          title: &quot;&quot;,</span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          html: false,</span><br><span class="line">          timer: 500,</span><br><span class="line">          showConfirmButton: false</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加文件my-<code>post-copyright.styl</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>,在代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>之前添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">      &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><p>然后保存。</p><p>如果需要为文章添加版权信息，只需要在当前博客或者模板文件的Front-matter中添加字段：<code>copyright: true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: </span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">date: 2019-05-24 15:06:10</span><br><span class="line">updated:</span><br><span class="line">copyright: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="5-添加字数统计与阅读时长"><a href="#5-添加字数统计与阅读时长" class="headerlink" title="5. 添加字数统计与阅读时长"></a>5. 添加字数统计与阅读时长</h3><p>NexT主题默认已经集成了字数统计的功能，只需要在主题的配置文件中打开此功能即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>修改完成之后，重新启动服务，进行预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s --drafts</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:4000/</code> 链接，如果出现字数统计和阅读时长失效的情况，一般是因为没有安装 <code>hexo-wordcount</code>插件，查看 Hexo 插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --debug</span><br></pre></td></tr></table></figure><p>安装字数统计的插件<br>如果没有安装 hexo-wordcount 插件，先安装该插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>Node 版本 7.6.0 之前,请安装 2.x 版本 (Node.js v7.6.0 and previous) ，安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><p>安装完成后，重新执行启动服务预览就可以了。</p><h3 id="6-添加来必力评论系统"><a href="#6-添加来必力评论系统" class="headerlink" title="6. 添加来必力评论系统"></a>6. 添加来必力评论系统</h3><p>首先要注册来必力帐号，并获取用户的UID（具体可以看上方的参考博客）。<br>然后打开主题目录的配置文件<code>/next/_config.yml</code>，定位到<code>livere_uid</code>字段，将UID填入即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br><span class="line">livere_uid: MTAyMC8zMjk1NS85NTs3</span><br></pre></td></tr></table></figure><p>至此，其他人就可以使用评论系统进行评论。</p><ol start="7"><li>修改头像实现旋转<br>更换头像，打开站点配置文件,找到<code>avatar字段</code>，可以使用网络路径，也可以将头像存放在<code>source/images/</code>中。如果头像是椭圆的，是因为图片不是一个正方形的图片，找到一个宽高像素一样的的图片即可。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/head.jpg</span><br></pre></td></tr></table></figure><p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  /* 头像圆形 */</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line">  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束</span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span><br><span class="line"></span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">  /* 鼠标经过停止头像旋转</span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*/</span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line">/* Z 轴旋转动画 */</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-添加访问量"><a href="#8-添加访问量" class="headerlink" title="8. 添加访问量"></a>8. 添加访问量</h3><p>打开<code>\themes\next\layout\_partials\footer.swig</code>文件,搜索<code>&lt;div class=&quot;copyright&quot;&gt;</code>，在这个<strong>div标签前边</strong>加上如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后再在合适的位置添加如下代码，自己是放在<strong>footer.swig文件的末尾</strong>，具体显示的位置见博主的博客。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">  本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：统计访问量有两种不同的方式（自己使用的是uv的方式）</p></blockquote><blockquote><p>pv的方式，也就是单个用户连续点击n篇文章，记录n次访问量</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><blockquote><p>uv的方式，单个用户点击n篇文章，只记录1次访问量</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">  本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>添加之后再执行<code>hexo d -g</code>，然后再刷新页面就能看到效果</p><p><strong>==2019.3.31 修复不蒜子域名失效==</strong><br><strong>==新方法==</strong><br>使用不蒜子添加总访问量</p><p>不蒜子官网：<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">http://busuanzi.ibruce.info/</a><br>使用功能就更加简单，找到 next 主题的页脚文件 <code>foot.swg</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim themes/next/layout/_partials/footer.swig</span><br></pre></td></tr></table></figure><p>添加如下代码即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot; class=&quot;theme-info&quot;&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;span id=&quot;busuanzi_container_site_uv&quot; class=&quot;theme-info&quot;&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="9-添加进度条"><a href="#9-添加进度条" class="headerlink" title="9. 添加进度条"></a>9. 添加进度条</h3><p>首先需要查看当前NexT的版本号？<br>如何查看当前NexT主题的版本号呢，打开<code>主题配置文件_config.yml</code>,最下方就显示了当前的版本号。</p><p>版本5.1.3只需要在主题配置文件中找到pace属性，将其修改为true就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><h3 id="10-侧边栏社交小图标设置"><a href="#10-侧边栏社交小图标设置" class="headerlink" title="10. 侧边栏社交小图标设置"></a>10. 侧边栏社交小图标设置</h3><p>打开<code>主题配置文件</code>，搜索<code>social_icons</code>,在图标库fontawesome找自己喜欢的小图标，并将名字复制到social_icons属性下，保存即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/bailangsyc</span><br><span class="line">  CSDN: http://blog.csdn.net/bailangsyc?ref=toolbar</span><br><span class="line">  简书: https://www.jianshu.com/u/05c8535250b5</span><br><span class="line">  音乐: http://music.163.com/#/user/home?id=328756156</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br><span class="line">  GitHub: github</span><br><span class="line">  csdn: crosshairs</span><br><span class="line">  简书: heartbeat</span><br><span class="line">  音乐: fa-music</span><br></pre></td></tr></table></figure><h3 id="11-添加Rss"><a href="#11-添加Rss" class="headerlink" title="11. 添加Rss"></a>11. 添加Rss</h3><p>使用cd进入博客的<code>根目录</code>，执行下方命令安装插件<code>hexo-generate-feed</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>找到<code>博客的配置文件_config.yml</code>,然后在文件末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>然后找到<code>主题的配置文件_config.yml</code>,在rss:的后面加上/atom.xml,注意在冒号后面要加一个空格)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>在博客根目录执行命令<code>hexo g</code></p><h3 id="12-修改文章内链接文本样式"><a href="#12-修改文章内链接文本样式" class="headerlink" title="12. 修改文章内链接文本样式"></a>12. 修改文章内链接文本样式</h3><p>见本博客文章中的效果：当点击蓝色链接时，颜色变为黄色</p><p>修改文件 themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@import &quot;post-expand&quot;;</span><br><span class="line">@import &quot;post-collapse&quot;;</span><br></pre></td></tr></table></figure><h3 id="13-修改文章底部的那个带-号的标签"><a href="#13-修改文章底部的那个带-号的标签" class="headerlink" title="13. 修改文章底部的那个带#号的标签"></a>13. 修改文章底部的那个带#号的标签</h3><p>默认的标签文字前边是个#，可以将其修改</p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索<code>rel=”tag”&gt;#</code>，将 # 换成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;post-tags&quot;&gt;</span><br><span class="line">     &#123;% for tag in post.tags %&#125;</span><br><span class="line">       &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">     &#123;% endfor %&#125;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="14-在每篇文章末尾统一添加“本文结束”标记"><a href="#14-在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="14. 在每篇文章末尾统一添加“本文结束”标记"></a>14. 在每篇文章末尾统一添加“本文结束”标记</h3><p>在路径<code>\themes\next\layout\_macro</code> 中新建<code>passage-end-tag.swig</code> 文件,并添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在post-body之后， post-footer 之前添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开<code>主题配置文件_config.yml</code>,在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="15-添加底部分享"><a href="#15-添加底部分享" class="headerlink" title="15. 添加底部分享"></a>15. 添加底部分享</h3><p>在<code>主题的配置文件中</code>,将<code>jiathis</code>改为<code>true</code>即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Share</span><br><span class="line"># This plugin is more useful in China, make sure you known how to use it.</span><br><span class="line"># And you can find the use guide at official webiste: http://www.jiathis.com/.</span><br><span class="line"># Warning: JiaThis does not support https.</span><br><span class="line">jiathis: true</span><br><span class="line">  ##uid: Get this uid from http://www.jiathis.com/</span><br></pre></td></tr></table></figure><h3 id="16-修改代码块自定义样式"><a href="#16-修改代码块自定义样式" class="headerlink" title="16. 修改代码块自定义样式"></a>16. 修改代码块自定义样式</h3><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入如下css样式，即可实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">code &#123;</span><br><span class="line">    color: #ff7600;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17-添加友情链接"><a href="#17-添加友情链接" class="headerlink" title="17. 添加友情链接"></a>17. 添加友情链接</h3><p>在<code>主题配置文件(blog\themes\next_config.yml)</code>中打开links 开关即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: 友情链接</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  #Title: http://example.com/</span><br><span class="line">  JayLee: http://xxxx.cn/</span><br></pre></td></tr></table></figure><p>注意：添加友情链接后 运行hexo g命令报错。<br>此时，只要将其中一个links_layout属性注掉就可以。</p><blockquote><p>links_layout: inline 对应的水平布局，否则友情链接是竖直一列排列</p></blockquote><h3 id="18-博客添加背景动态效果和心心"><a href="#18-博客添加背景动态效果和心心" class="headerlink" title="18. 博客添加背景动态效果和心心"></a>18. 博客添加背景动态效果和心心</h3><p>因为动态背景效果在手机上体验不太好，所以自己只加了小心心的效果。当鼠标左键点击的时候会出现不同颜色的小心心。</p><p>下载js文件love.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</span><br></pre></td></tr></table></figure><p>把 js 文件 love.js放在<code>\themes\next\source\js\src</code>文件目录下</p><p>更新\themes\next\layout_layout.swig文件，在末尾（在前面引用会出现找不到的bug）添加以下js引入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="19-hexo文章目录显示的bug"><a href="#19-hexo文章目录显示的bug" class="headerlink" title="19. hexo文章目录显示的bug"></a>19. hexo文章目录显示的bug</h3><p><a href="https://github.com/iissnan/hexo-theme-next/issues/2035" target="_blank" rel="noopener">参考博客：hexo-next为啥文章预览那里我的文章跳转只能点击前面的数字 #2035</a></p><p>将主题配置文件中的<code>number</code>属性修改为<code>false</code>即可取消自动编号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Automatically add list number to toc.</span><br><span class="line">number: false</span><br></pre></td></tr></table></figure><p>bug描述： hexo会自动为文章生成一个目录，并且会自动编号。<br>这个功能可以在主题配置文件中开启，但是编号以后只点击编号才能跳转到对应位置，点击文字却没有反应。</p><p>这是hexo 3.4.3的一个bug，只有点击文章目录的编号才能跳转。更新hexo到3.4.4即可解决此bug。</p><p>进入到博客的根目录中，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update hexo</span><br></pre></td></tr></table></figure><p>然后执行hexo version查看hexo的版本号，更新完成即可解决此bug。</p><h3 id="20-更换Scheme"><a href="#20-更换Scheme" class="headerlink" title="20. 更换Scheme"></a>20. 更换Scheme</h3><p>NexT主题默认有四种主题外观，Scheme的切换可以通过更改 主题配置文件 。搜索 scheme 关键字,就会看到有四行 scheme 的配置，将需要启用的scheme前面的注释#去除即可。</p><blockquote><p>注意事项<br>但是 scheme 前边一定不要留空格，:必须是英文的，而且后边必须留空格。<br>错误的配置（:后没有空格）<br>错误配置（scheme前边留了空格）</p></blockquote><p>如果<strong>scheme前边留了空格</strong>，执行hexo g命令，或者启动博客服务时，会报出如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Unhandled rejection Error: ENOENT: no such file or directory, open &apos;C:\github\blog\themes\next\layout\_scripts\schemes\.swig&apos;</span><br><span class="line">    at Error (native)</span><br><span class="line">    at Object.fs.openSync (fs.js:584:18)</span><br><span class="line">    at Object.fs.readFileSync (fs.js:431:33)</span><br><span class="line">    at Object.ret.load (C:\github\blog\node_modules\swig\lib\loaders\filesystem.js:55:15)</span><br><span class="line">    at compileFile (C:\github\blog\node_modules\swig\lib\swig.js:695:31)</span><br><span class="line">    at Object.eval [as tpl] (eval at &lt;anonymous&gt; (C:\github\blog\node_modules\swig\lib\swig.js:498:13), &lt;anonymous&gt;:293:18)</span><br><span class="line">    at compiled [as _compiledSync] (C:\github\blog\node_modules\swig\lib\swig.js:619:18)</span><br><span class="line">    at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at null._compiled (C:\github\blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at View.render (C:\github\blog\node_modules\hexo\lib\theme\view.js:29:15)</span><br><span class="line">    at C:\github\blog\node_modules\hexo\lib\hexo\index.js:387:25</span><br><span class="line">    at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at C:\github\blog\node_modules\bluebird\js\release\method.js:15:34</span><br><span class="line">    at RouteStream._read (C:\github\blog\node_modules\hexo\lib\hexo\router.js:134:3)</span><br><span class="line">    at RouteStream.Readable.read (_stream_readable.js:336:10)</span><br><span class="line">    at resume_ (_stream_readable.js:726:12)</span><br><span class="line">    at _combinedTickCallback (node.js:383:13)</span><br><span class="line">    at process._tickCallback (node.js:407:11)</span><br></pre></td></tr></table></figure><h3 id="21-优化加载速度"><a href="#21-优化加载速度" class="headerlink" title="21. 优化加载速度"></a>21. 优化加载速度</h3><p>为了提高网站的加载速度，使用gulp对博文中的js、css、img等文件进行压缩。<br>在博客的根目录执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br><span class="line">$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>然后在根目录中新建文件<code>gulpfile.js</code>，并填入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line">// 压缩 public 目录 css</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function() &#123;</span><br><span class="line">    return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public 目录 html</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class="line">  return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(htmlmin(&#123;</span><br><span class="line">         removeComments: true,</span><br><span class="line">         minifyJS: true,</span><br><span class="line">         minifyCSS: true,</span><br><span class="line">         minifyURLs: true,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public/js 目录 js</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class="line">    return gulp.src(&apos;./public/**/*.js&apos;)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(&apos;default&apos;, [</span><br><span class="line">    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>生成博文是执行<code>hexo g &amp;&amp; gulp</code>就会根据<code>gulpfile.js</code>中的配置，对public目录中的静态资源文件进行压缩。</p><h3 id="22-博文置顶"><a href="#22-博文置顶" class="headerlink" title="22. 博文置顶"></a>22. 博文置顶</h3><p>打开博客的根目录，将文件<code>node_modules/hexo-generator-index/lib/generator.js</code>中的代码替换为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后写文章的时候，添加 <code>top字段</code>即可，数值越大文章越靠前。例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: </span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">photos:</span><br><span class="line">date: 2019-06-30 17:27:39</span><br><span class="line">updated:</span><br><span class="line">copyright: true</span><br><span class="line">top: 100</span><br></pre></td></tr></table></figure><p>注意：必须重启本地服务才会生效。</p><h3 id="23-博客置顶功能"><a href="#23-博客置顶功能" class="headerlink" title="23. 博客置顶功能"></a>23. 博客置顶功能</h3><p>参考博客新增Hexo博客文章置顶功能</p><p>修改<code>node_modules/hexo-generator-index/lib/generator.js</code>的源码， 添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">      if(a.top &amp;&amp; b.top) &#123;</span><br><span class="line">          if(a.top == b.top) return b.date - a.date;</span><br><span class="line">          else return b.top - a.top;</span><br><span class="line">      &#125;</span><br><span class="line">      else if(a.top &amp;&amp; !b.top) &#123;</span><br><span class="line">          return -1;</span><br><span class="line">      &#125;</span><br><span class="line">      else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">          return 1;</span><br><span class="line">      &#125;</span><br><span class="line">      else return b.date - a.date;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>修改后的代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">module.exports = function(locals) &#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts.sort(config.index_generator.order_by);</span><br><span class="line"></span><br><span class="line">  posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">      if(a.top &amp;&amp; b.top) &#123;</span><br><span class="line">          if(a.top == b.top) return b.date - a.date;</span><br><span class="line">          else return b.top - a.top;</span><br><span class="line">      &#125;</span><br><span class="line">      else if(a.top &amp;&amp; !b.top) &#123;</span><br><span class="line">          return -1;</span><br><span class="line">      &#125;</span><br><span class="line">      else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">          return 1;</span><br><span class="line">      &#125;</span><br><span class="line">      else return b.date - a.date;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  var path = config.index_generator.path || &apos;&apos;;</span><br></pre></td></tr></table></figure><h2 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h2><p><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">Next官方手册</a><br><a href="https://www.iteye.com/blog/aijezdm915-1340838" target="_blank" rel="noopener">CSS颜色代码大全视图参照表！ </a><br><a href="https://fontawesome.com" target="_blank" rel="noopener">fontawesome图标大全</a><br><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">西蒙的博客</a><br><a href="http://www.shaoyance.com/2018/01/26/Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">ShaoYanCe的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 基础知识 自调用if __name__ == &#39;__main__&#39;</title>
      <link href="/2019/03/02/python%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E8%87%AA%E8%B0%83%E7%94%A8if%20__name__%20==%20&#39;__main__&#39;/"/>
      <url>/2019/03/02/python%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E8%87%AA%E8%B0%83%E7%94%A8if%20__name__%20==%20&#39;__main__&#39;/</url>
      
        <content type="html"><![CDATA[<h3 id="正确理解自调用"><a href="#正确理解自调用" class="headerlink" title="正确理解自调用"></a>正确理解自调用</h3><font color="#E93EFF"><strong> name</strong> 是当前模块名，当模块被直接运行时模块名为  <strong> main</strong> </font><font color="#FF3333" size="5">这句话的意思就是，<strong>当模块被直接运行时</strong>，以下代码块将被运行</font><font color="#FF3333" size="5"><strong>当模块是被导入时</strong>，代码块不被运行</font><blockquote><p>可以理解为 if <strong> name</strong> == <strong> main </strong> 底下的是私有代码</p></blockquote><p>来解释一下使用场景</p><p>通过<em><strong> name</strong></em>的值，我们可以判断出该模块是作为<strong>脚本正在执行</strong>还是<strong>被其他模块导入</strong>，而根据这个判断，我们就可以<strong>选择性地执行代码</strong>。</p><p>比如我现在有两个<code>py文件</code> ，其中 <code>one.py</code>文件运行的时候 函数模块<code>one.py</code>是作为**脚本正在执行；</p><p><code>two.py</code>文件运行的时候，函数模块<code>one.py</code>是被<strong>其他模块导入</strong></p><p> <code>one.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file one.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"func() in one.py"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"top-level in one.py"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"one.py is being run directly"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"one.py is being imported into another module"</span>)</span><br></pre></td></tr></table></figure><p><code>two.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file two.py</span></span><br><span class="line"><span class="keyword">import</span> one</span><br><span class="line"></span><br><span class="line">print(<span class="string">"top-level in two.py"</span>)</span><br><span class="line">one.func()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"two.py is being run directly"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"two.py is being imported into another module"</span>)</span><br></pre></td></tr></table></figure><p>如果你执行one.py文件，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python one.py</span><br></pre></td></tr></table></figure><p>会输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top-level <span class="keyword">in</span> one.py</span><br><span class="line">one.py <span class="keyword">is</span> being run directly <span class="comment">#模块被直接运行，代码块将被运行</span></span><br></pre></td></tr></table></figure><p>如果你执行two.py文件，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python two.py</span><br></pre></td></tr></table></figure><p>会输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">top-level <span class="keyword">in</span> one.py <span class="comment">#调用模块 程序顺序运行</span></span><br><span class="line">one.py <span class="keyword">is</span> being imported into another module</span><br><span class="line">top-level <span class="keyword">in</span> two.py</span><br><span class="line">func() <span class="keyword">in</span> one.py </span><br><span class="line">two.py <span class="keyword">is</span> being run directly</span><br></pre></td></tr></table></figure><h3 id="再次强调"><a href="#再次强调" class="headerlink" title="再次强调"></a>再次强调</h3><p>一个 Python 源码文件除了可以被直接运行外，还可以作为模块（也就是库）被导入。不管是导入还是直接运行，最顶层的代码都会被运行（Python 用缩进来区分代码层次）。而实际上<strong><em>在导入的时候，有一部分代码我们是不希望被运行的</em></strong>。因此，我们只要写一句 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span></span><br><span class="line"><span class="comment">#running code here by itself 主动运行时</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment"># codes when imported 被调用时</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://blog.konghy.cn/2017/04/24/python-entry-program/" target="_blank" rel="noopener">Python 中的 if <strong>name</strong> == ‘<strong>main</strong>‘ 该如何理解</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 基础知识 迭代器和生成器</title>
      <link href="/2019/03/01/python%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E7%94%9F%E6%88%90%E5%99%A8/"/>
      <url>/2019/03/01/python%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E7%94%9F%E6%88%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="内置集合"><a href="#内置集合" class="headerlink" title="内置集合"></a>内置集合</h3><p>在讲迭代器和生成器之前，先要了解Python 共内置了 <code>list</code>、 <code>tuple</code> 、<code>dict</code> 和 <code>set</code> 四种基本集合，每个 集合对象都能够迭代。</p><h6 id="tuple-类型"><a href="#tuple-类型" class="headerlink" title=" tuple 类型 "></a><font color="#E38EFF"> tuple 类型 </font></h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="string">'python'</span>, <span class="number">2.7</span>, <span class="number">64</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tup:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>程序将以此按行输出 ‘python’, 2.7 和 64。</p><h6 id="dictionary-类型"><a href="#dictionary-类型" class="headerlink" title="dictionary 类型 "></a><font color="#E38EFF">dictionary 类型 </font></h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;&#125;</span><br><span class="line">dic[<span class="string">'lan'</span>] = <span class="string">'python'</span></span><br><span class="line">dic[<span class="string">'version'</span>] = <span class="number">2.7</span></span><br><span class="line">dic[<span class="string">'platform'</span>] = <span class="number">64</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic:</span><br><span class="line">    print(key, dic[key])</span><br></pre></td></tr></table></figure><p>输出的结果为：<code>platform 64，lan python, version 2.7</code>, 字典在迭代的过程 中将 <code>key</code> 作为可迭代的对象返回。注意字典中 <code>key</code> 是乱序的，也就是说和插入 的顺序是不一致的。如果想要使用顺序一致的字典，请使用 <code>collections</code> 模块 中的 <code>OrderedDict</code> 对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line">d = collections.OrderedDict()</span><br><span class="line">d[<span class="string">'a'</span>]=<span class="string">'A'</span></span><br><span class="line">d[<span class="string">'b'</span>]=<span class="string">'B'</span></span><br><span class="line">d[<span class="string">'c'</span>]=<span class="string">'c'</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">  print(key,d[key])</span><br><span class="line"><span class="comment"># OrderedDict</span></span><br></pre></td></tr></table></figure> <font color="#E38EFF">set 类型 </font><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = set([<span class="string">'python'</span>, <span class="string">'python2'</span>, <span class="string">'python3'</span>,<span class="string">'python'</span>])</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> s:</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><p>将会输出 <code>python, python3, python2</code> set 集合将会去除重复项，注意输出的 结果也不是按照输入的顺序。&gt;</p><blockquote><p><strong><em>为什么会有迭代器和生成器？因为我们有的时候需要这四种集合特殊的规律，比如Fibonacci数列</em></strong></p><p><strong><em>多种多样的需求肯定不能个个都内建，因此我们需要自己来构建</em></strong></p></blockquote><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器 "></a><font color="#66FFFF">迭代器 </font></h3><p>Python 中的 <code>for</code> 句法实际上实现了设计模式中的<a href="https://en.wikipedia.org/wiki/Iterator_pattern#Python" target="_blank" rel="noopener">迭代器模式</a> ，所以我们自己也可以按照迭代器的要求,自己<strong>生成迭代器对象</strong>，以便在 <code>for</code> 语句中使用。比如我想要一个迭代器每次循环的次数时按照Fibonacci序列，1，1，2，3，5，8 …… 只要类中实现了 <code>__iter__</code>和 <code>next</code> 函数，那么对象就可以在 <code>for</code> 语句中使用。 现在创建 Fibonacci 迭代器对象,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define a Fib class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fib</span><span class="params">(object)</span>:</span> <span class="comment">#构造类 </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, max)</span>:</span> <span class="comment">#init 属性 max</span></span><br><span class="line">        self.max = max </span><br><span class="line">        self.n, self.a, self.b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> <span class="comment"># 初始属性n，属性a，属性b</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span> <span class="comment">#迭代器用到__iter__函数</span></span><br><span class="line">        <span class="keyword">return</span> self <span class="comment">#该函数会由iter函数调用 返回一个可以迭代的对象～</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span> <span class="comment">#该函数会有next内建函数调用</span></span><br><span class="line">        <span class="keyword">if</span> self.n &lt; self.max:</span><br><span class="line">            r = self.b</span><br><span class="line">            self.a, self.b = self.b, self.a + self.b</span><br><span class="line">            self.n = self.n + <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> r</span><br><span class="line">        <span class="keyword">raise</span> StopIteration()</span><br><span class="line"></span><br><span class="line"><span class="comment"># using Fib object</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Fib(<span class="number">5</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>将会输出前 5 个 Fibonacci 数据 <code>1，1, 2, 3, 5</code></p><p>如果<code>Fib(6)</code>,此时这个迭代器输出为<code>1,1,2,3,5,8</code></p><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器 "></a><font color="#66FFFF">生成器 </font></h3><p>除了使用迭代器以外，Python 使用 <code>yield</code> 关键字也能实现类似迭代的效果，<code>yield</code> 语句每次 执行时，立即返回结果给上层调用者，而当前的状态仍然保留，以便迭代器下一次循环调用。这样做的 好处是在于节约硬件资源，在需要的时候才会执行，并且每次只执行一次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> max:</span><br><span class="line">        r = b</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">        max -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> r</span><br><span class="line"></span><br><span class="line"><span class="comment"># using generator</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fib(<span class="number">5</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>将会输出前 5 个 Fibonacci 数据 <code>1，1, 2, 3, 5</code></p>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew —— 轻松安装和卸载Mac的包管理器</title>
      <link href="/2019/02/21/Homebrew%20%E2%80%94%E2%80%94%20%E8%BD%BB%E6%9D%BE%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BDMac%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/2019/02/21/Homebrew%20%E2%80%94%E2%80%94%20%E8%BD%BB%E6%9D%BE%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BDMac%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Homebrew-——-轻松安装和卸载Mac的应用"><a href="#Homebrew-——-轻松安装和卸载Mac的应用" class="headerlink" title="Homebrew —— 轻松安装和卸载Mac的应用"></a>Homebrew —— 轻松安装和卸载Mac的应用</h2><blockquote><ol><li><p>想必很多人都听说过Homebrew 如果需要很频繁的安装、配制、卸载和升级软件包，那么有一个很顺手的兵器–包管理器可以省去很多麻烦，节约各种时间和精力的成本～～OvO</p></li><li><p>而Mac上比较多的同学都是使用的Homebrew～</p></li><li>这篇文章来介绍一下Homebrew 以及它的基本用法～</li></ol></blockquote><h2 id="什么是Homebrew？我们为什么需要它"><a href="#什么是Homebrew？我们为什么需要它" class="headerlink" title="什么是Homebrew？我们为什么需要它"></a>什么是Homebrew？我们为什么需要它</h2><blockquote><p>Homebrew简称brew<br>是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件， 使用命令，非常方便。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>网上有很多的教程，由于版本更迭，我只说我现在版本的方式<br>尽量还是学好<a href="https://docs.brew.sh" target="_blank" rel="noopener">brew官方手册</a>比较好！但是由于brew本身的包管理超级强的性质，老版本几乎都是向下兼容的，很棒，update很容易！<br>在Mac中打开Termal: 输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ruby -e &quot;$(curl --insecure -fsSL</span><br><span class="line">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>拿<code>git</code>为例</p><blockquote><p>Ps 要学习git 很推荐 <a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰的学习教程</a><br>安装就一步：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br><span class="line">brew uninstall git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search [包名] //查询可用包</span><br></pre></td></tr></table></figure><p><font color="pink" size="6">Homebrew 常用命令一览</font><br>没事你就<code>man brew</code>一下可以涨不少知识。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ brew --help #简洁命令帮助</span><br><span class="line">$brew -v #查看版本</span><br><span class="line">$ man brew #完整命令帮助</span><br><span class="line">$ brew search git #搜索软件包</span><br><span class="line">$ brew list #显示已经安装的所有软件包</span><br></pre></td></tr></table></figure><p>软件更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ brew update # 同步远程最新更新情况，对本机已经安装并有更新的软件用*标明</span><br><span class="line">$ brew outdated #查看已安装的哪些软件包需要更新</span><br><span class="line">$ brew upgrade git #更新单个软件包</span><br><span class="line">$ brew info git #查看软件包信息</span><br><span class="line">$ brew home git #访问软件包官方站</span><br></pre></td></tr></table></figure><p>软件旧版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ brew cleanup #清理所有已安装软件包的历史老版本</span><br><span class="line">$ brew cleanup git #清理单个已安装软件包的历史版本</span><br><span class="line">brew cleanup -n    # 查看可清理的旧版本包，不执行实际操作</span><br></pre></td></tr></table></figure><p>上述这几条都是非常实用的，几乎隔几个月自检一下都有帮助。</p><p>由于包的版本更新的问题导致的一系列的问题都可以规避掉了！如果你想控制某个包保持版本的话，使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ brew pin $FORMULA  //锁定某个包</span><br><span class="line"></span><br><span class="line">$ brew unpin $FORMULA  //取消锁定</span><br></pre></td></tr></table></figure><h3 id="常用软件包"><a href="#常用软件包" class="headerlink" title="常用软件包"></a>常用软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew install wget</span><br><span class="line">brew install curl</span><br><span class="line">brew install openssl</span><br><span class="line">brew install fish      #安装fish shell</span><br><span class="line">brew install git-flow  #安装git-flow</span><br><span class="line">brew install python    #安装python</span><br></pre></td></tr></table></figure><h3 id="Homebrew-Cask"><a href="#Homebrew-Cask" class="headerlink" title="Homebrew-Cask"></a>Homebrew-Cask</h3><p><strong>Homebrew-Cask</strong> 是 Homebrew 的一个扩展。它能够优雅、简单、快速的安装和管理 macOS 图形界面程序，比如Google Chrome 和Dropbox等等。官网 <a href="https://caskroom.github.io/。" target="_blank" rel="noopener">https://caskroom.github.io/。</a></p><h4 id="Cask-必装的理由"><a href="#Cask-必装的理由" class="headerlink" title="Cask 必装的理由"></a>Cask 必装的理由</h4><p>有图形界面的软件可以直接在 App Stroe 中下载更新，为啥还需要 Cask 呢？因为有的很好用的免费 Mac 软件并没有选择在 App Store 上架，对于没有上架的软件我们只能是通过搜索找到官网然后在下载安装包，这样不够优雅也不方便管理，而使用 Cask 可以通过一行命令就搞定安装了，还可以统一更新升级所有的软件，实现从非 App Store 途径安装的软件的统一管理。<br>Cask 从软件官方网站下载软件包，然后在后台安装并将 <code>.app</code> 移动到 <code>Applications</code>。通过 Cask 安装的软件也会在 Lanuchpad 显示，跟从 App Store 安装的软件没啥区别。对于那些收费的软件，用 Cask 安装只是比普通安装方法节省了时间和步骤，没啥其他的区别。</p><h4 id="Cask常用命令"><a href="#Cask常用命令" class="headerlink" title="Cask常用命令"></a>Cask常用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brew cask -help 查看帮助</span><br><span class="line">brew cask install &lt;software name&gt; 安装软件</span><br><span class="line">brew cask install google-chrome  #安装Chrome</span><br><span class="line">brew cask uninstall &lt;software name&gt; 卸载软件</span><br><span class="line">brew cask search &lt;software name&gt; 搜索软件</span><br><span class="line">brew cask info &lt;software name&gt; 查看软件相关信息</span><br><span class="line">brew cask list 列出通过 Homebrew-Cask 安装的包</span><br></pre></td></tr></table></figure><h3 id="卸载Homebrew"><a href="#卸载Homebrew" class="headerlink" title="卸载Homebrew"></a>卸载Homebrew</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd `brew --prefix`</span><br><span class="line">rm -rf Cellar</span><br><span class="line">brew prune</span><br><span class="line">rm `git ls-files`</span><br><span class="line">rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions</span><br><span class="line">rm -rf .git</span><br><span class="line">rm -rf ~/Library/Caches/Homebrew</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>电脑里的第三方应用越多，HomeBrew 的优势越明显。</p><p>如果只下载一个应用，可能径自前往其官网也不会觉得麻烦，但如果你每次下载第三方应用就要前往官网、每次更新都得去其菜单栏中寻找 update 按钮，那显然是不便的。HomeBrew 就为这些的零碎的操作<strong>提供了一个集中的管理办法</strong>。</p><p>学会了本文的几条命令，对你来说 HomeBrew 就不再是晦涩的命令行工具，而是一个简单好用的第三方应用版 App Store。</p><p><font color="red" size="10">非常方便！</font></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>少数派上的专题<a href="https://sspai.com/topic/181" target="_blank" rel="noopener">Homebrew，Mac 应用管家</a><br><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/Homebrew/index.html" target="_blank" rel="noopener">Mac 开发配置手册</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
            <tag> brew </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora修改代码块样式</title>
      <link href="/2019/02/01/Typora%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E5%9D%97%E6%A0%B7%E5%BC%8F/"/>
      <url>/2019/02/01/Typora%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E5%9D%97%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="Typora修改代码块样式"><a href="#Typora修改代码块样式" class="headerlink" title="Typora修改代码块样式"></a>Typora修改代码块样式</h3><p>Typora的代码块语法高亮使用的是<a href="https://codemirror.net/" target="_blank" rel="noopener">CodeMirror</a>实现的，所以需要更换代码块的样式，我们可以去CodeMirror提供的里下载样式表文件进行修改。</p><p>拿举例<code>Sublime Text</code>的<code>Monokai</code>样式了，在<a href="https://codemirror.net/theme/monokai.css" target="_blank" rel="noopener">monokai</a>可以看到该样式内容。替换自己喜欢的样式到Typora，只需要两步即可:</p><ol><li><p>把样式表的内容复制粘贴到主题目录<code>themes</code>下的<code>base.user.css</code>或<code>[theme].user.css</code>样式表文件内，其中<code>[theme]</code>表示对应的主题的名字，我使用的主题是<code>Github</code>，所以我修改的是<code>github.user.css</code>文件。PS在Mac版本中直接在Setting Perfomance偏好设置中找到<code>外观-主题-打开主题文件夹</code>即可 路径：<code>Library/Application Support/anberworks.Typora/themes</code></p></li><li><p>在<a href="https://codemirror.net/theme" target="_blank" rel="noopener">codemirror</a>中找到你需要的主题CSS文件，复制粘贴进去之后把文本中的<code>.cm-s-monokai</code>统一改成<code>.cm-s-inner</code>，使用查找替换功能可以瞬间完成 :)</p></li><li><p>在以上样式的底部，直接复制添加代码块的<code>基础样式</code>到样式表中，如font-family, color还有background等属性，完成后的样式表内容应该是类似这样的:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Based on Sublime Text's Monokai theme */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cm-s-inner</span><span class="selector-class">.CodeMirror</span> &#123; <span class="attribute">background</span>: <span class="number">#272822</span>; <span class="attribute">color</span>: <span class="number">#f8f8f2</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">div</span><span class="selector-class">.CodeMirror-selected</span> &#123; <span class="attribute">background</span>: <span class="number">#49483E</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span><span class="selector-pseudo">::selection</span>, <span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">::selection</span>, <span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span> &gt; <span class="selector-tag">span</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">::selection</span> &#123; <span class="attribute">background</span>: <span class="built_in">rgba</span>(73, 72, 62, .99); &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span><span class="selector-pseudo">::-moz-selection</span>, <span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">::-moz-selection</span>, <span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-line</span> &gt; <span class="selector-tag">span</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">::-moz-selection</span> &#123; <span class="attribute">background</span>: <span class="built_in">rgba</span>(73, 72, 62, .99); &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-gutters</span> &#123; <span class="attribute">background</span>: <span class="number">#272822</span>; <span class="attribute">border-right</span>: <span class="number">0px</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-guttermarker</span> &#123; <span class="attribute">color</span>: white; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-guttermarker-subtle</span> &#123; <span class="attribute">color</span>: <span class="number">#d0d0d0</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-linenumber</span> &#123; <span class="attribute">color</span>: <span class="number">#d0d0d0</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-cursor</span> &#123; <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#f8f8f0</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-comment</span> &#123; <span class="attribute">color</span>: <span class="number">#75715e</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-atom</span> &#123; <span class="attribute">color</span>: <span class="number">#ae81ff</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-number</span> &#123; <span class="attribute">color</span>: <span class="number">#ae81ff</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-property</span>, <span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-attribute</span> &#123; <span class="attribute">color</span>: <span class="number">#a6e22e</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-keyword</span> &#123; <span class="attribute">color</span>: <span class="number">#f92672</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-builtin</span> &#123; <span class="attribute">color</span>: <span class="number">#66d9ef</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-string</span> &#123; <span class="attribute">color</span>: <span class="number">#e6db74</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-variable</span> &#123; <span class="attribute">color</span>: <span class="number">#f8f8f2</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-variable-2</span> &#123; <span class="attribute">color</span>: <span class="number">#9effff</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-variable-3</span> &#123; <span class="attribute">color</span>: <span class="number">#66d9ef</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-def</span> &#123; <span class="attribute">color</span>: <span class="number">#fd971f</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-bracket</span> &#123; <span class="attribute">color</span>: <span class="number">#f8f8f2</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-tag</span> &#123; <span class="attribute">color</span>: <span class="number">#f92672</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-header</span> &#123; <span class="attribute">color</span>: <span class="number">#ae81ff</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-link</span> &#123; <span class="attribute">color</span>: <span class="number">#ae81ff</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-tag">span</span><span class="selector-class">.cm-error</span> &#123; <span class="attribute">background</span>: <span class="number">#f92672</span>; <span class="attribute">color</span>: <span class="number">#f8f8f0</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-activeline-background</span> &#123; <span class="attribute">background</span>: <span class="number">#373831</span>; &#125;</span><br><span class="line"><span class="selector-class">.cm-s-inner</span> <span class="selector-class">.CodeMirror-matchingbracket</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">  <span class="attribute">color</span>: white <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**apply to code fences with plan text**/</span></span><br><span class="line"><span class="selector-class">.md-fences</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#272822</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f8f8f2</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.md-fences</span> <span class="selector-class">.code-tooltip</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#272822</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>注意</strong>: 如果主题目录<code>themes</code>下没有对应的<code>.css</code>文件，自己手动创建即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac Terminal 终端命令入门 小白 新手教程 终端切换root用户</title>
      <link href="/2019/01/21/Mac%20Terminal%20%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8%20%E5%B0%8F%E7%99%BD%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B%20%E7%BB%88%E7%AB%AF%E5%88%87%E6%8D%A2root%E7%94%A8%E6%88%B7/"/>
      <url>/2019/01/21/Mac%20Terminal%20%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8%20%E5%B0%8F%E7%99%BD%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B%20%E7%BB%88%E7%AB%AF%E5%88%87%E6%8D%A2root%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="Terminal-终端命令入门"><a href="#Terminal-终端命令入门" class="headerlink" title="Terminal 终端命令入门"></a><font color="#0099ff" size="12" face="黑体">Terminal 终端命令入门</font></h2><blockquote><p>本来是想要在自己的研究生涯阶段好好当个人的，没想到永远计划赶不上变化，如今面临各方面的压力大了，反而自己能够安静下来做起自己。</p><p>其他的不管了，我自己还是先从一些基本的东西记录写写，慢慢上手，（总不能自己也一下子吃成一个胖子，不是吗？qwq）</p></blockquote><h3 id="第一步、-打开终端"><a href="#第一步、-打开终端" class="headerlink" title="第一步、 打开终端"></a>第一步、 打开终端</h3><p>终端是系统中一个应用程序，我比较喜欢使用聚焦搜索,也就是<code>command+space</code>，输入「终端」或「Terminal」，看到<code>termimal.app</code>被选中了按下回车即可。</p><h3 id="第二步、了解常用命令"><a href="#第二步、了解常用命令" class="headerlink" title="第二步、了解常用命令"></a>第二步、了解常用命令</h3><p>终端的操作熟练之后，遇到最多的常常离不开对文件，文件夹的操作。<br>这个时候就要了解什么是<strong>路径</strong></p><blockquote><p>系统中的每一个文件都有一个存放位置，这一存放位置就称作路径。</p></blockquote><p>终端启动后，它的默认路径在当前用户文件夹的根目录上<code>/Users/用户名</code>，为了确定这一点，你可以输入 pwd 命令来查看当前路径。如下所示，我的当前路径就是/Users/shirlynn</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ShirlynndeMacBook-Pro:~ shirlynn$ pwd</span><br><span class="line">/Users/shirlynn</span><br></pre></td></tr></table></figure><p><strong>快速导入路径</strong>的方法呢？直接将待编辑文件或文件夹拖入终端中即可，它会显示<strong>绝对路径</strong>。<br>Mac 在Finder 窗口 使用<code>shift+command+G</code>也可以快速确定路径。</p><p>另一个是<strong>相对路径</strong>允许你告诉终端从现在开始，接下来应该怎么走。相对路径的方法实在绝对路径前加一个 <strong>.</strong>。比如我的博客根目录的绝对路径是<code>/shirlynn/blog</code>,由于我已经处在了<code>/shirlynn</code>下，我现在可以通过两种方式都可以进入。<code>cd ./blog</code> 或者 <code>cd blog</code></p><p>这些都是无害指令，面对有风险的指令，需要在前面加输 sudo，这就是所谓的<strong>超级管理员指令</strong>，它会在你密码确认后，赋予 sudo 之后的命令最高权限，可以进行你想要的操作。</p><h3 id="第三、终端切换root用户"><a href="#第三、终端切换root用户" class="headerlink" title="第三、终端切换root用户"></a>第三、终端切换root用户</h3><p>终端切换root用户，方法一： 使用<code>sudo -i</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ShirlynndeMacBook-Pro:~ shirlynn$ sudo -i</span><br><span class="line">Password:</span><br><span class="line">ShirlynndeMacBook-Pro:~ root# （注意用户名改为了root，进入了root权限）</span><br></pre></td></tr></table></figure><p>方法二：使用<code>sudo su</code>接着用户名显示sh-3.2#,这里的#代表的含义就是具有root权限<br>这时，再输入<code>su -</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ShirlynndeMacBook-Pro:~ shirlynn$ sudo su</span><br><span class="line">Password: 输入你的密码</span><br><span class="line">sh-3.2# su -</span><br><span class="line">ShirlynndeMacBook-Pro:~ root#</span><br></pre></td></tr></table></figure><p>root权限切换回用户：<code>su - 用户名</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh-3.2# su - shirlynn (注意-后有空格)</span><br><span class="line">ShirlynndeMacBook-Pro:~ shirlynn$</span><br></pre></td></tr></table></figure><h2 id="一些常用的终端命令"><a href="#一些常用的终端命令" class="headerlink" title="一些常用的终端命令"></a>一些常用的终端命令</h2><table><thead><tr><th style="text-align:center">命令名</th><th style="text-align:center">功能描述</th><th style="text-align:center">使用举例</th></tr></thead><tbody><tr><td style="text-align:center">mkdir</td><td style="text-align:center">创建一个目录</td><td style="text-align:center">mkdir dirname</td></tr><tr><td style="text-align:center">rmdir</td><td style="text-align:center">删除一个目录</td><td style="text-align:center">rmdir dirname</td></tr><tr><td style="text-align:center">mvdir</td><td style="text-align:center">移动或重命名一个目录</td><td style="text-align:center">mvdir dir1 dir2</td></tr><tr><td style="text-align:center">cd</td><td style="text-align:center">改变当前目录</td><td style="text-align:center">cd dirname</td></tr><tr><td style="text-align:center">pwd</td><td style="text-align:center">显示当前目录的路径名</td><td style="text-align:center">pwd</td></tr><tr><td style="text-align:center">ls</td><td style="text-align:center">显示当前目录，-la隐藏项目显示,-r 全部文件并展开一级子文件夹，-R所有子文件夹</td><td style="text-align:center">ls -la  ls -R</td></tr><tr><td style="text-align:center">dircmp</td><td style="text-align:center">比较两个目录的内容</td><td style="text-align:center">dircmp dir1 dir2</td></tr><tr><td style="text-align:center">cat</td><td style="text-align:center">显示或连接文件</td><td style="text-align:center">cat filename</td></tr><tr><td style="text-align:center">pg</td><td style="text-align:center">分页格式化显示文件内容</td><td style="text-align:center">pg filename</td></tr><tr><td style="text-align:center">more</td><td style="text-align:center">分屏显示文件内容</td><td style="text-align:center">more filename</td></tr><tr><td style="text-align:center">od</td><td style="text-align:center">显示非文本文件的内容</td><td style="text-align:center">od -c filename</td></tr><tr><td style="text-align:center">cp</td><td style="text-align:center">复制文件或目录</td><td style="text-align:center">cp file1 file2</td></tr><tr><td style="text-align:center">rm</td><td style="text-align:center">删除文件或目录</td><td style="text-align:center">rm filename</td></tr><tr><td style="text-align:center">mv</td><td style="text-align:center">改变文件名或所在目录</td><td style="text-align:center">mv file1 file2</td></tr><tr><td style="text-align:center">ln</td><td style="text-align:center">联接文件</td><td style="text-align:center">ln -s file1 file2</td></tr><tr><td style="text-align:center">find</td><td style="text-align:center">使用匹配表达式查找文件</td><td style="text-align:center">find . -name “*.c” -print</td></tr><tr><td style="text-align:center">file</td><td style="text-align:center">显示文件类型</td><td style="text-align:center">file filename</td></tr><tr><td style="text-align:center">open</td><td style="text-align:center">使用默认的程序打开文件</td><td style="text-align:center">open filename</td></tr></tbody></table><table><thead><tr><th style="text-align:center">命令名</th><th style="text-align:center">功能描述</th><th style="text-align:center">使用举例</th></tr></thead><tbody><tr><td style="text-align:center">passwd</td><td style="text-align:center">修改用户密码</td><td style="text-align:center">passwd</td></tr><tr><td style="text-align:center">chmod</td><td style="text-align:center">改变文件或目录的权限</td><td style="text-align:center">chmod ug+x filename</td></tr><tr><td style="text-align:center">umask</td><td style="text-align:center">定义创建文件的权限掩码</td><td style="text-align:center">umask 027</td></tr><tr><td style="text-align:center">chown</td><td style="text-align:center">改变文件或目录的属主</td><td style="text-align:center">chown newowner filename</td></tr><tr><td style="text-align:center">chgrp</td><td style="text-align:center">改变文件或目录的所属组</td><td style="text-align:center">chgrp staff filename</td></tr><tr><td style="text-align:center">xlock</td><td style="text-align:center">给终端上锁</td><td style="text-align:center">xlock -remote</td></tr></tbody></table><p>See more on <a href="https://www.jianshu.com/p/3291de46f3ff/" target="_blank" rel="noopener">Mac 终端命令大全</a></p><h2 id="常见玩法"><a href="#常见玩法" class="headerlink" title="常见玩法"></a>常见玩法</h2><ul><li><strong>关闭崩溃报错</strong>：有时软件崩溃就已经很让人烦心了，重新打开后一遍遍弹出的问题报告更是烦不胜烦。这时你可以使用 <code>defaults write com.apple.CrashReporter DialogType none</code> 命令关闭这个问题报告。若你希望恢复其显示，可以输入<code>defaults write com.apple.CrashReporter DialogType crashreport</code>。</li><li><strong>修改文件日期</strong>： 有时你可能需要修改文件创建或修改日期，这时可以使用 <code>touch -t 199505090000</code> 拖入文件命令。这句命令中的数字表示 1995 年 5 月 9 日 00:00 分，你可以根据实际需要修改。</li><li><strong>不要进入休眠状态</strong>：当你临时不希望电脑进入休眠状态时，可以使用 <code>caffeinate</code> 命令让电脑时刻清醒。当你需要其恢复正常时，按下 <code>⌃Control - C</code> 即可停止该命令。</li><li><strong>程序假死需要强退</strong>：有时候程序假死了，强行退出也没用，这时可以使用 killall 命令。以微信为例，若想强退它，只需输入 <code>killall WeChat</code> 即可。</li><li><strong>截图保存为 JPEG</strong>：Mac 的默认截图格式为 PNG，若你想让默认的截图保存类型为 JPEG，可以输入如下指令 <code>defaults write com.apple.screencapture type jpg</code><br>如果你希望撤销这条指令，输入 <code>defaults write com.apple.screencapture type png</code> 即可。</li><li><strong>关闭截图自动阴影</strong>： 若你使用 Mac 自带的截图，会发现每次的窗口截图均会自动添加阴影，当你需要后期处理这些图片时，这些阴影可能会对你造成困扰。你可以使用下面这串命令来关闭截图阴影：<code>defaults write com.apple.screencapture disable-shadow -bool true; killall SystemUIServer</code><br>当你希望重新启动阴影时，可以输入：<br><code>defaults write com.apple.screencapture disable-shadow -bool false; killall SystemUIServer</code></li><li><strong>显示隐藏文件夹</strong>：在你跟着网络上的教程进行一些操作时，难免会遇到让你寻找隐藏文件夹的情况，这时你可以使用：<br><code>defaults write com.apple.finder AppleShowAllFiles -bool true; killall Finder</code><br>来显示所有隐藏文件夹，当你不需要再显示时，输入：<br><code>defaults write com.apple.finder AppleShowAllFiles -bool false; killall Finder</code><br>即可恢复隐藏。</li></ul><h3 id="文件格式转换-textutil"><a href="#文件格式转换-textutil" class="headerlink" title="文件格式转换 textutil"></a>文件格式转换 textutil</h3><p>textutil 是一个系统自带的，用于处理文稿的命令，其中我最常用的功能是其下属功能 convert，这句指令允许你将任何文件，在以下文件格式中互相转换 txt, html, rtf, rtfd, doc, docx, wordml, odt, webarchive。</p><p>若你手头有一篇 DOCX 文件需要被转换成 <code>TXT</code>，则可以输入 <code>textutil -convert txt 文件路径</code>，这句代码中的 txt 处，可以替换为任何你需要转换到的文件格式，文件路径则可以采用拖拽文件到终端的方法自动填充。</p><p><a href="https://sspai.com/post/45534" target="_blank" rel="noopener">少数派玩转Terminal</a></p><h3 id="自动安装-brew"><a href="#自动安装-brew" class="headerlink" title="自动安装 brew"></a>自动安装 brew</h3><p>Mac 有个很方便的包管理器，名叫 <code>Homebrew</code>，它允许你自动安装许多应用程序。Homebrew 不是 terminal 的自带内容，需要运行这串命令来进行安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><h3 id="文件删除-rm"><a href="#文件删除-rm" class="headerlink" title="文件删除 rm"></a>文件删除 rm</h3><p>这一指令本是 ==删除文件== 用的，但正因为它可以<strong>不分敌我的删除任何文件</strong>，新手误用有极大风险，因此我不打算详细介绍这个。网上有一个臭名远扬的传言，欺骗别人用 <del><code>sudo rm -rfv /Cool</code></del>来删除系统文件，从而使整个系统崩溃，<strong>这条命令绝对不要尝试</strong>。</p><!--$$    ||Xw-y||^2_2$$\\[    A^T_S = B\\]---title: date: 2019-05-21# password: 123categories: something #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式description: ----->]]></content>
      
      
      <categories>
          
          <category> 教程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/12/02/index/"/>
      <url>/2018/12/02/index/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
